// Generated by CoffeeScript 1.3.3
(function() {
  var Enemies, Enemy, Player, Sample_Doga2,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  enchant();

  Sample_Doga2 = (function(_super) {

    __extends(Sample_Doga2, _super);

    function Sample_Doga2() {
      Sample_Doga2.__super__.constructor.call(this);
      this.preload("model/fighter.l3p.js", "model/enemy1.l3p.js");
      this.onload = function() {
        var cam,
          _this = this;
        this.scene = new Scene3D();
        cam = this.scene.getCamera();
        cam.x = 0;
        cam.y = 20;
        cam.z = -20;
        this.enemies = new Enemies();
        this.player = new Player();
        this.player.z = -5;
        this.scene.addChild(this.player);
        this.onenterframe = function() {
          var e;
          if (Math.random() < 0.2) {
            e = _this.enemies.get();
            if (e) {
              e.x = 0;
              e.y = 0;
              e.z = 8;
              return _this.scene.addChild(e);
            }
          }
        };
      };
      this.start();
    }

    return Sample_Doga2;

  })(Game);

  window.onload = function() {
    return new Sample_Doga2;
  };

  Player = (function(_super) {

    __extends(Player, _super);

    function Player() {
      var _this = this;
      this.game = enchant.Game.instance;
      Player.__super__.constructor.call(this);
      this.model = this.game.assets["model/fighter.l3p.js"];
      this.addChild(this.model);
      this.roll = 0;
      this.onenterframe = function() {
        var _ref;
        if (_this.game.input.right) {
          _this.x -= 0.2;
          _this.roll += 0.2;
        } else {
          if (_this.game.input.left) {
            _this.x += 0.2;
            _this.roll -= 0.2;
          } else {
            _this.roll *= 0.8;
            if ((-0.001 < (_ref = _this.roll) && _ref < 0.001)) {
              _this.roll = 0;
            }
          }
        }
        _this.x = Math.max(-4, Math.min(_this.x, 4));
        _this.roll = Math.max(-1.5, Math.min(_this.roll, 1.5));
        return _this.rotationSet(new Quat(0, 0, 1, _this.roll));
      };
    }

    return Player;

  })(Sprite3D);

  Enemy = (function(_super) {

    __extends(Enemy, _super);

    function Enemy() {
      var _this = this;
      this.game = enchant.Game.instance;
      Enemy.__super__.constructor.call(this);
      this.model = this.game.assets["model/enemy1.l3p.js"];
      this.addChild(this.model);
      this.active = false;
      this.onenterframe = function() {
        _this.z -= 0.1;
        if (_this.z < -5) {
          return _this.parentNode.removeChild(_this);
        }
      };
      this.on("removed", function() {
        return _this.active = false;
      });
    }

    return Enemy;

  })(Sprite3D);

  Enemies = (function() {

    function Enemies() {
      this.get = __bind(this.get, this);

      var b, i, _i;
      this.game = enchant.Game.instance;
      this.ary = [];
      for (i = _i = 0; _i < 10; i = ++_i) {
        b = new Enemy();
        this.ary.push(b);
      }
    }

    Enemies.prototype.get = function() {
      var i, _i, _len, _ref;
      _ref = this.ary;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        i = _ref[_i];
        if (i.active !== true) {
          i.active = true;
          i.age = 0;
          return i;
        }
      }
    };

    return Enemies;

  })();

}).call(this);
